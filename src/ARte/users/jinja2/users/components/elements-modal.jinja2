{% extends '/users/components/generic-modal.jinja2' %}

<link rel="stylesheet" href="/static/css/repository-list.css">

{% block title %}
    <h1 id="modal-title"></h1>
{% endblock %}

{% block content %}
    <p id="element-author"></p>
    <p id="element-upload-info"></p>
    <p id="element-analytics"></p>
    <p id="download"> Download file:</p>
    <p id="element-download"></p>
    
    {#<button id="share-element" class="select-btn"></button>
    <button id="create-artwork" class="select-btn"></button>#}
    <script>
        function elementAuthor(author){
            $('#element-author').text({{ _("by ")|tojson }} + author);
        }
        function uploadedBy(owner, date){
            $('#element-upload-info').replaceWith(
                    '<p id="element-upload-info">' +
                    {{ _("Uploaded by ")|tojson }} +
                    owner  + ', ' + 
                    {{ _("in ")|tojson }} + date + '</p>'
                )
        }
        function usedIn(artworks_count, exhibits_count, element_src){

            $('#element-analytics').replaceWith(
                '<p id="element-analytics">'+
                {{ _(" Used in ")|tojson }} +
                artworks_count +  {{ _(" artworks")|tojson }} + 
                {{ _(" and in ")|tojson }} + exhibits_count +
                {{ _(" exhibits")|tojson }} +
                '<img id="element-src" src="' + element_src + '"/></p>'
            )
        }
        function usedInExhibit(marker_id, object_id, exhibits_count, marker_src, augmented_src){
            let objet_tag = ''
            if(augmentd_src.split('.')[1] == 'gif'){
                object_tag = '<img id="' + object_id + '" class="trigger-erase artwork-content" data-elem-type="object" src="' + augmented_src + '"/></p>'
            }else{
                object_tag = '<video muted autoplay loop id="' + object_id + '" class="trigger-erase artwork-content" data-elem-type="object" src="' + augmented_src + '"/></p>'
            }

            $('#element-analytics').replaceWith(
                '<p id="element-analytics">'+
                {{ _(" Used in ")|tojson }} +
                exhibits_count +
                {{ _(" exhibits")|tojson }} + 
                '<img id="' + marker_id + '" class="trigger-erase artwork-content" data-elem-type="marker" src="' + marker_src + '"/>' + 
                object_tag
            )
            $('.trigger-erase').click(eraseModal);        
        }

        
        function downloadElement(element_type, file_size, element_src){
            if(element_type == "marker"){
                $('#element-download').replaceWith(
                    '<p id="element-download">' +
                    '<a id="png-download" href="'+ element_src +'">Download .png (' + file_size + ' kb)</a></p>'
                )
            }else{
                $('#element-download').replaceWith(
                    '<p id="element-download">' + 
                    '<a id="gif-download" href="'+ element_src +'">Download .gif (' + file_size + ' kb)</a></p>'
                )
            }
        }
        function replaceButtons(title, description){
            $('#share-element').replaceWith(
               '<h4>Title: ' + title + '</h4>'
            );
            $('#create-artwork').replaceWith(
                '<p>' + description + '</p>'
            );
        }

        function fillModal(element){
            let elemType = element.attr('data-elem-type');
            $('#modal-title').text({{ _("This is a Jandig ")|tojson }} + elemType);
            
            let elemUrl = {{url('element-get')|tojson}};
            elemUrl += ("?" + elemType + "_id=" + element.attr('id'));

            if(elemType != "artwork"){
                $('#share-element').text(
                    {{ _('Share this ')|tojson }} + elemType
                );
                $('#create-artwork').text(
                     {{ _('Create artwork with this ')|tojson }} + elemType
                );

                $.ajax({
                    url: elemUrl,
                    success: function(data){
                        elementAuthor(data['author']);
                        uploadedBy(data['owner'], data['uploaded_at']);
                        usedIn(data['artworks'], data['exhibits'], data['source']);
                        downloadElement(data['type'], data['size']/1000, data['source']);
                    }
                });
            }else{
                $('#download').attr('hidden', true)
                $.ajax({
                    url: elemUrl,
                    success: function(data){
                        elementAuthor(data['author']);
                        usedInExhibit(data['id_marker'], data['id_object'], data['exhibits'], data['marker'], data['augmented']);
                        replaceButtons(data['title'], data['description']);
                    }
                });
            }
        }

        function eraseModal() {
            $('#element-analytics').replaceWith('<p id="element-analytics"></p>');
            $('#element-author').replaceWith('<p id="element-author"></p>'); 
            fillModal($(this));
            }
    

        function manageModal(){
            element = $(this);
            fillModal(element);            
        }

        $('.trigger-modal').click(manageModal);
        
    </script>
{% endblock %}
