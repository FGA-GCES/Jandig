version: '3.5'

services:
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../src/data/nginx:/etc/nginx/conf.d
      - ../src/data/certbot/conf:/etc/letsencrypt
      - ../src/data/certbot/www:/var/www/certbot
      - static_dev_files:/usr/share/nginx/html/static/dev
      - static_staging_files:/usr/share/nginx/html/static/staging
      - static_prod_files:/usr/share/nginx/html/static/prod
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - dev_django
      - staging_django
      - prod_django
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  certbot:
    image: certbot/certbot
    volumes:
      - ../src/data/certbot/conf:/etc/letsencrypt
      - ../src/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  # DEV ------------------------------------------------------------------------------------------ #
  
  dev_django:
    image: jandigarte/django:dev
    ports:
      - 8000:8000
    env_file:
      - ../src/.envs/.dev_deploy
    depends_on:
      - dev_postgres
    volumes:
      - static_dev_files:/collect/
      - ./media/dev/:/src/ARte/users/media/
    command: inv db -p docs collect run -g -p
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
  
  dev_postgres:
    image: postgres:11.6
    env_file:
      - ../src/.envs/.dev_deploy
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
  # ------------------------------------------------------------------------------------------ #
  
  # STAGING ------------------------------------------------------------------------------------------ #

  staging_django:
    image: jandigarte/django:staging
    ports:
      - 8001:8000
    env_file:
      - ../src/.envs/.staging_deploy
    depends_on:
      - staging_postgres
    volumes:
      - static_staging_files:/collect/
      - ./media/staging/:/src/ARte/users/media/
    command: inv db -p docs collect run -g -p
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  staging_postgres:
    image: postgres:11.6
    env_file:
      - ../src/.envs/.staging_deploy
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
  
  # ------------------------------------------------------------------------------------------ #

  # PROD ------------------------------------------------------------------------------------------ #

  prod_django:
    image: jandigarte/django:latest
    ports:
      - 8002:8000
    env_file:
      - ../src/.envs/.prod_deploy
    depends_on:
      - prod_postgres
    volumes:
      - static_prod_files:/collect/
      - ./media/prod/:/src/ARte/users/media/    
    command: inv db -p docs collect run -g -p
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
 
  prod_postgres:
    image: postgres:11.6
    env_file:
      - ../src/.envs/.prod_deploy
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"    
  
  # ------------------------------------------------------------------------------------------ #

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
  
volumes:
  postgres_dev_data:
  postgres_staging_data:
  postgres_prod_data:
  static_dev_files:
  static_staging_files:
  static_prod_files: