version: '3.5'

services:
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../src/data/nginx:/etc/nginx/conf.d
      - ../src/data/certbot/conf:/etc/letsencrypt
      - ../src/data/certbot/www:/var/www/certbot
      - static_files:/usr/share/nginx/html/static
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - django
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  certbot:
    image: certbot/certbot
    volumes:
      - ../src/data/certbot/conf:/etc/letsencrypt
      - ../src/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  django:
    image: jandigarte/django:latest
    ports:
      - 8000:8000
    env_file:
      - ../src/.envs/.deploy
    depends_on:
      - postgres
    volumes:
      - static_files:/collect/
    command: db -p collect run -g -p
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  postgres:
    image: postgres
    env_file:
      - ../src/.envs/.deploy
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
      
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
  
volumes:
  postgres_data:
  static_files: